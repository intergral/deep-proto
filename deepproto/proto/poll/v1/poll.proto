//   Copyright (C) 2023  Intergral GmbH
//
//   This program is free software: you can redistribute it and/or modify
//   it under the terms of the GNU Affero General Public License as published by
//   the Free Software Foundation, either version 3 of the License, or
//   (at your option) any later version.
//
//   This program is distributed in the hope that it will be useful,
//   but WITHOUT ANY WARRANTY; without even the implied warranty of
//   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//   GNU Affero General Public License for more details.
//
//   You should have received a copy of the GNU Affero General Public License
//   along with this program.  If not, see <https://www.gnu.org/licenses/>.

syntax = "proto3";

package deepproto.proto.poll.v1;

import "deepproto/proto/resource/v1/resource.proto";
import "deepproto/proto/tracepoint/v1/tracepoint.proto";

option java_multiple_files = true;
option java_package = "com.intergral.deep.proto.poll.v1";
option go_package = "github.com/intergral/go-deep-proto/poll/v1";

// PollRequest is sent by the client to check its current config with the server.
message PollRequest {
  fixed64 ts_nanos = 1; //The time (as epoch nanos) when the message was sent, acts as message ID.
  string current_hash = 2; //This should the the hash that was last sent by the server, this is used to determine if the config has changed since the last poll. If no hash is available (e.g. first poll) then do not set this value.
  deepproto.proto.resource.v1.Resource resource = 3; //The attributes that represent the client making the request. These attributes are used to filter the tracepoint response to just the tracepoints that are for the requesting client.
}

// ResponseType is used to indicate if the response from the server should trigger an update of the client config.
// If the client sends the same 'current_hash' as that which the server has for the client, then the server will response with 'NO_CHANGE'. This allows the client to not trigger any changes to the current tracepoint configs.
enum ResponseType {
  NO_CHANGE = 0; // This is sent when the 'current_hash' from the request is the same as the response. So the client should do nothing.
  UPDATE = 1; // This is sent when the client should process the response to update the config.
}

// PollResponse is the response the server will send in response to a PollRequest.
message PollResponse {
  fixed64 ts_nanos = 1; //The time (as epoch nanos) then he message was sent. This should match the 'ts_nanos' from the triggering PollRequest.
  string current_hash = 2; //This is the hash that the server has assigned this current config for this client. This should be sent with the next PollRequest.
  repeated deepproto.proto.tracepoint.v1.TracePointConfig response = 3; //This is the list of tracepoints that are currently configured for this client.
  ResponseType response_type = 4; // This indicates if the config has changed or not. If 'NO_CHANGE' then 'response' should be null or empty.
}

// This is how the application agent should request the config of the tracepoints.
service PollConfig {
  //Call this function as often as is required to ensure config is up to date.
  rpc poll (PollRequest) returns (PollResponse) {}
}
